# 1. Import Libraries


import matplotlib.pyplot as plt
from scipy.interpolate import interp1d
import seaborn as sns

# # #------------------------------------
# # 1. feature Imporatance plots
# #1.1 - Original data set
#
# fig, axes = plt.subplots(1, 2) # , figsize=(6, 12))
#
# # add padding between the subplots
# plt.subplots_adjust(wspace = 0.5) # hspace
#
# x_axis = ['spo2_max', 'inr_max', 'spo2_min', 'aniongap_min', 'bicarbonate_min', 'creatinine_min', 'sodium_max', 'resp_rate_max', 'pt_max', 'base_platelets', 'calcium_min', 'sbp_min', 'platelets_min', 'glucose_max', 'age', 'platelets_max', 'mbp_mean', 'temperature_mean', 'heart_rate_max', 'hematocrit_max', 'glucose_min']
#
# y_axis = [37, 42, 73, 85, 88, 99, 106, 110, 116, 123, 124, 124, 125, 128, 132, 134, 137, 141, 146, 152, 157]
#
# x_axis = list(reversed(x_axis))
# y_axis = list(reversed(y_axis))
#
# print(x_axis)
# print(y_axis)
#
#
# # plt.barh(x_axis, y_axis)
# # # plt.yticks(rotation=90)
# # # plt.xticks(rotation=90)
# # # plt.xticks(fontsize=5)
# # plt.yticks(fontsize=8)
# # plt.yticks(fontsize=8)
# # plt.xlabel('Feature Importance', fontsize=12)
# # plt.ylabel('Feature name', fontsize=12)
# # plt.title('Feature importance - Original data set (HIT:No HIT = 13:87)')
# # plt.savefig('imbalance_data_feature_importance.png')
# # plt.show()
#
# # sns.set(font_scale=5)
#
# sns.barplot(ax=axes[0], x=y_axis, y=x_axis, orient='h', color='steelblue')  # , color='orange', )
# #
# # sns.barplot(x=y_axis, y=x_axis, orient='h', color = 'steelblue')
# # axes[0].set_title('Feature Importance - Original data set (HIT positive/negative = 13:87)', fontsize=50)
# axes[0].set_xlabel('Feature Importance', fontsize=15)
# axes[0].set_ylabel('Feature name', fontsize=15)
# axes[0].yaxis.set_tick_params(labelsize=15)
# axes[0].xaxis.set_tick_params(labelsize=15)
#
# # plt.xlabel('Feature Importance', fontsize=12)
# # plt.ylabel('Feature name', fontsize=12)
# # plt.title('Feature importance - Original data set (HIT:No HIT = 13:87)')
#
# # #------------------------------------
# # 1.2 - Balanced data set
#
# x_axis = ['spo2_max', 'inr_max', 'calcium_min', 'spo2_min', 'aniongap_min', 'resp_rate_max', 'pt_max', 'base_platelets', 'glucose_max', 'sodium_max', 'creatinine_min', 'glucose_min', 'sbp_min', 'platelets_max', 'bicarbonate_min', 'hematocrit_max', 'platelets_min', 'heart_rate_max', 'age', 'mbp_mean', 'temperature_mean']
# y_axis = [47, 62, 93, 95, 97, 100, 103, 109, 111, 111, 127, 127, 127, 128, 131, 136, 139, 143, 152, 155, 156]
#
# x_axis = list(reversed(x_axis))
# y_axis = list(reversed(y_axis))
#
# print(x_axis)
# print(y_axis)
#
#
# # sns.barplot(x=y_axis, y=x_axis, orient='h', color = 'steelblue')
#
# sns.barplot(ax=axes[1], x=y_axis, y=x_axis, orient='h', color='steelblue')  # , color='orange', )
#
# # axes[1].set_title('Feature Importance - Balanced data set (HIT positive/negative = 1:2)', fontsize=50)
# axes[1].set_xlabel('Feature Importance', fontsize=15)
# axes[1].set_ylabel('Feature name', fontsize=15)
# axes[1].yaxis.set_tick_params(labelsize=15)
# axes[1].xaxis.set_tick_params(labelsize=15)
#
# plt.show()

# ------------------------------------
# # 2. Likelihood ratios - leaf plot

x_new = [0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.17, 0.18,
         0.19, 0.2, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.27, 0.28, 0.29, 0.3, 0.31, 0.32, 0.33, 0.34, 0.35, 0.36, 0.37,
         0.38, 0.39, 0.4, 0.41, 0.42, 0.43, 0.44, 0.45, 0.46, 0.47, 0.48, 0.49, 0.5, 0.51, 0.52, 0.53, 0.54, 0.55, 0.56,
         0.57, 0.58, 0.59, 0.6, 0.61, 0.62, 0.63, 0.64, 0.65, 0.66, 0.67, 0.68, 0.69, 0.7, 0.71, 0.72, 0.73, 0.74, 0.75,
         0.76, 0.77, 0.78, 0.79, 0.8, 0.81, 0.82, 0.83, 0.84, 0.85, 0.86, 0.87, 0.88, 0.89, 0.9, 0.91, 0.92, 0.93, 0.94,
         0.95, 0.96, 0.97, 0.98, 0.99, 1]

y_positiveLR_original = [0.117568410731794,	0.212091976201962,	0.289741524492934,	0.354665232589406,	0.409754582168375,	0.457086750606446,	0.498192413532618,	0.534224382341029,	0.566067426446045,	0.594411897251014,	0.619804348754752,	0.64268312489849,	0.6634038766588,	0.682258183699106,	0.699487360791939,	0.71529284164859,	0.729844090746346,	0.743284703525139,	0.755737161123006,	0.767306573589296,	0.778083654035226,	0.788147101960997,	0.797565528301391,	0.806399021805584,	0.814700432365658,	0.82251642922243,	0.829888378812947,	0.83685307713224,	0.843443363983154,	0.849688640755851,	0.855615308962314,	0.861247143323539,	0.866605610528202,	0.871710142673871,	0.876578372733314,	0.881226338059535,	0.885668656878936,	0.88991868186499,	0.893988634191272,	0.89788972089857,	0.901632237949949,	0.905225660969313,	0.908678725347261,	0.911999497139984,	0.915195435972554,	0.918273450979205,	0.921239950663516,	0.924100887435778,	0.926861797478883,	0.929527836504581,	0.93210381188599,	0.934594211587725,	0.937003230259895,	0.939334792815129,	0.941592575767409,	0.943780026576715,	0.945900381213593,	0.947956680131843,	0.949951782815151,	0.951888381044022,	0.953769011012459,	0.955596064409077,	0.957371798564467,	0.959098345755317,	0.960777721745952,	0.962411833639198,	0.964002487100891,	0.965551393015545,	0.967060173624762,	0.968530368194692,	0.969963438254151,	0.97136077244088,	0.972723690989726,	0.97405344989322,	0.97535124476214,	0.976618214410974,	0.977855444190905,	0.979063969090805,	0.980244776624867,	0.98139880952381,	0.982526968245064,	0.983630113315993,	0.984709067522959,	0.985764617957934,	0.986797517933371,	0.987808488775101,	0.988798221502245,	0.989767378402347,	0.990716594509288,	0.991646478990895,	0.992557616452629,	0.993450568163212,	0.994325873207584,	0.995184049572183,	0.996025595167124,	0.99685098878952,	0.997660691031869,	0.998455145139114,	0.999234777817739,	1]

y_negativeLR_original = [0.00741929015440144,	0.0148773622838762,	0.0223745212658738,	0.0299110751818917,	0.0374873353596758,	0.045103616416091,	0.0527602363006722,	0.0604575163398693,	0.0681957812819988,	0.0759753593429158,	0.0837965822524192,	0.0916597853014038,	0.0995653073897744,	0.107513491075135,	0.115504682622268,	0.123539232053422,	0.131617493199414,	0.139739823751574,	0.147906585314538,	0.156118143459916,	0.164374867780834,	0.172677131947391,	0.181025313763029,	0.189419795221843,	0.197860962566845,	0.206349206349206,	0.214884921488492,	0.223468507333909,	0.232100367726584,	0.240780911062907,	0.24951055035893,	0.258289703315881,	0.267118792386786,	0.27599824484423,	0.284928492849285,	0.293909973521624,	0.302943129010843,	0.312028406569019,	0.321166258624527,	0.330357142857143,	0.339601522274457,	0.348899865289627,	0.358252645800495,	0.367660343270099,	0.377123442808607,	0.386642435256701,	0.396217817270449,	0.405850091407678,	0.415539766215906,	0.425287356321839,	0.435093382522481,	0.444958371877891,	0.454882857805614,	0.464867380176826,	0.474912485414236,	0.48501872659176,	0.495186663536041,	0.505416862929816,	0.515709898417198,	0.5260663507109,	0.53648680770145,	0.546971864568431,	0.557522123893805,	0.568138195777351,	0.578820697954272,	0.589570255915017,	0.600387503027367,	0.611273080660836,	0.622227638313429,	0.633251833740831,	0.644346333088055,	0.655511811023622,	0.666748950876327,	0.678058444774641,	0.68944099378882,	0.700897308075773,	0.712428107026757,	0.724034119417963,	0.735716083564057,	0.747474747474748,	0.759310869014441,	0.771225216065074,	0.78321856669217,	0.795291709314227,	0.807445442875481,	0.819680577022154,	0.831997932282244,	0.844398340248963,	0.85688264376789,	0.869451697127937,	0.882106366256222,	0.89484752891693,	0.907676074914271,	0.920592906299629,	0.933598937583001,	0.946695095948827,	0.959882321476331,	0.973161567364466,	0.986533800161594,	1]

y_positiveLR_balanced = [0.0527222275380346,	0.101082370207301,	0.145600281863825,	0.186716367333107,	0.224806201550388,	0.260192035258933,	0.293151934331535,	0.323927101704879,	0.35272779002774,	0.37973811164714,	0.405119978611055,	0.429016350895406,	0.451553930530165,	0.472845408851293,	0.492991351028929,	0.512081784386617,	0.530197543442577,	0.547411414063362,	0.563789110883731,	0.579390115667718,	0.594268399157722,	0.608473044875013,	0.622048790065282,	0.635036496350365,	0.647473560517039,	0.659394274141581,	0.670830139333544,	0.681810146720877,	0.692361020841458,	0.702507437314067,	0.712272215503941,	0.721676489849378,	0.730739862556766,	0.73948053998579,	0.747915454721737,	0.756060375057173,	0.763930003372429,	0.771538064706316,	0.778897386639603,	0.78601997146933,	0.792917061528202,	0.799599198396794,	0.806076276664512,	0.812357592815976,	0.818451889750784,	0.824367397385026,	0.830111869731064,	0.835692618806876,	0.841116545686782,	0.846390168970814,	0.851519650919669,	0.856510821475547,	0.861369200365749,	0.866100017465215,	0.870708231575923,	0.875198547764919,	0.879575433388411,	0.883843132916644,	0.888005681662979,	0.892066918510523,	0.896030497720669,	0.8998998998999,	0.903678442194049,	0.907369287772746,	0.910975454661071,	0.914499823970226,	0.917945147574409,	0.921314055276876,	0.924609061504414,	0.927832571566033,	0.930986887508627,	0.934074213599548,	0.937096661463551,	0.940056254899248,	0.942954934398175,	0.945794561387659,	0.948576922217005,	0.951303731904909,	0.953976637664643,	0.956597222222222,	0.959167006941609,	0.961687454769912,	0.964159973014568,	0.966585915963579,	0.968966587359057,	0.971303242733571,	0.973597091618092,	0.975849299629689,	0.978060990446559,	0.980233247677407,	0.982367116631727,	0.984463605997048,	0.986523689428797,	0.98854830705806,	0.990538366922131,	0.992494746322426,	0.994418293114034,	0.996309826930883,	0.998170140350235,	1]

y_negativeLR_balanced = [0.00532502762986034,	0.0107005855037351,	0.0161273962876559,	0.0216061964940889,	0.0271377368151562,	0.0327227824655279,	0.0383621135353118,	0.0440565253532835,	0.0498068288608124,	0.0556138509968521,	0.0614784350943794,	0.0674014412886817,	0.0733837469379061,	0.0794262470563049,	0.085529854760624,	0.0916955017301038,	0.0979241386805782,	0.104216735853179,	0.110574283518173,	0.116997792494481,	0.123488294685454,	0.130046843631497,	0.136674515080166,	0.143372407574391,	0.15014164305949,	0.156983367509683,	0.163898751574848,	0.170888991248273,	0.177955308556212,	0.185098952270081,	0.192321198642163,	0.199623352165725,	0.207006746360516,	0.214472744584623,	0.222022740873728,	0.229658160808859,	0.237380462413751,	0.245191137083029,	0.253091710542427,	0.261083743842365,	0.269168834386226,	0.277348616994767,	0.285624765008146,	0.293998991427131,	0.302473050095117,	0.311048736922684,	0.319727891156463,	0.328512396694215,	0.337404183448097,	0.34640522875817,	0.355517558858345,	0.364743250397035,	0.374084432014915,	0.38354328598231,	0.393122049898854,	0.402823018458198,	0.412648545280699,	0.422601044817157,	0.43268299432683,	0.442896935933148,	0.45324547876069,	0.463731301157211,	0.474357153004688,	0.48512585812357,	0.496040316774658,	0.507103508263265,	0.518318493650562,	0.529688418577308,	0.541216516205417,	0.55290611028316,	0.564760618340087,	0.576783555018138,	0.588978535545745,	0.601349279362159,	0.613899613899614,	0.626633478531425,	0.639554928694562,	0.652668140195769,	0.665977413710832,	0.67948717948718,	0.693202002260617,	0.707126586397657,	0.721265781275619,	0.735624586913417,	0.750208159866778,	0.765021819402484,	0.78007105396718,	0.795361527967258,	0.810899088877428,	0.826689774696707,	0.842739821771798,	0.859055673009161,	0.87564398649849,	0.892511644571838,	0.9096657633243,	0.927113702623907,	0.944863076640323,	0.96292176492399,	0.981297924069572,	1]

fig, axes = plt.subplots(1, 2)  # , figsize=(6, 6))

# fig, axes = plt.subplots(1, 2, figsize=(6, 6))

plt.subplots_adjust(wspace=0.5)  # hspace

# fig, axes = plt.subplot_mosaic([['(a)', '(b)']], layout='constrained')

plt.style.use('seaborn')

f1 = interp1d(x_new, y_positiveLR_original, kind='quadratic')
y1_smooth = f1(x_new)
axes[0].plot(x_new, y1_smooth, color='r')

f2 = interp1d(x_new, y_negativeLR_original, kind='quadratic')
y2_smooth = f2(x_new)
axes[0].plot(x_new, y2_smooth, color='b')

y3 = x_new
axes[0].plot(x_new, y3, linestyle='dashed', color='k')

axes[0].set_xlabel('Pre-test probability', fontsize=20)
axes[0].set_ylabel('Post-test probability', fontsize=20)
axes[0].legend(['Positive test (LR+ = 13.19)', 'Negative test (LR- = 0.74)', 'Without test'], loc="lower right",
               fontsize=20)
# axes[0].set_title("The leaf plot - Original data set (HIT positive/negative = 13:87)", fontsize=20)

axes[0].yaxis.set_tick_params(labelsize=20)
axes[0].xaxis.set_tick_params(labelsize=20)

# ---balanced data

f3 = interp1d(x_new, y_positiveLR_balanced, kind='quadratic')
y3_smooth = f3(x_new)
axes[1].plot(x_new, y3_smooth, color='r')

f4 = interp1d(x_new, y_negativeLR_balanced, kind='quadratic')
y4_smooth = f4(x_new)
axes[1].plot(x_new, y4_smooth, color='b')

axes[1].plot(x_new, y3, linestyle='dashed', color='k')

axes[1].set_xlabel('Pre-test probability', fontsize=20)
axes[1].set_ylabel('Post-test probability', fontsize=20)
axes[1].legend(['Positive test (LR+ = 5.51)', 'Negative test (LR- = 0.53)', 'Without test'], loc="lower right",
               fontsize=20)
# axes[1].set_title("The leaf plot - Balanced data (HIT positive/negative = 1:2)", fontsize=20)

axes[1].yaxis.set_tick_params(labelsize=20)
axes[1].xaxis.set_tick_params(labelsize=20)

plt.show()
# python 8_Jan_3_LR_curve_and_Feature_Importance.py
